#+STARTUP: content
#+OPTIONS: \n:t
#+TITLE:	My Install Application in Linux
#+EXPORT_FILE_NAME: linux-install-application
#+AUTHOR:	Shawn Dennis Lin
#+EMAIL:	ShawnDennisLin@gmail.com
#+DATE:	[2021-03-16 Tue]

#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t

#+SEQ_TODO: TODO DRAFT DONE
#+PROPERTY: header-args :eval no

#+HUGO_BASE_DIR: ~/shdennlin.github.io
#+HUGO_SECTION: /posts/linux/linux-install-application/

#+hugo_menu: :menu sidebar :name Linux Install Application :identifier linux-install-app :parent linux :weight auto
#+HUGO_CATEGORIES: OS
#+HUGO_TAGS: linux
#+HUGO_DRAFT: false
#+hugo_custom_front_matter: :hero /posts/linux/linux-install-application/images/linux.png

These are the applications I installed in Linux. If you have any questions about these apps, you can contact me.

#+HUGO: more

My OS information
#+begin_src sh
                          ./+o+-       shdennlin@nb
                  yyyyy- -yyyyyy+      OS: Ubuntu 20.04 focal
               ://+//////-yyyyyyo      Kernel: x86_64 Linux 5.8.0-48-generic
           .++ .:/++++++/-.+sss/`      Uptime: 52m
         .:++o:  /++++++++/:--:/-      Packages: 2706
        o:+o+:++.`..```.-/oo+++++/     Shell: bash 5.0.17
       .:+o:+o/.          `+sssoo+/    Resolution: 1920x1080
  .++/+:+oo+o:`             /sssooo.   DE: GNOME 3.36.5
 /+++//+:`oo+o               /::--:.   WM: Mutter
 \+/+o+++`o++o               ++////.   WM Theme: 
  .++.o+++oo+:`             /dddhhh.   GTK Theme: Yaru-dark [GTK2/3]
       .+.o+oo:.          `oddhhhh+    Icon Theme: Yaru
        \+.++o+o``-````.:ohdhhhhh+     Font: Ubuntu 11
         `:o+++ `ohhhhhhhhyo++os:      Disk: 89G / 471G (20%)
           .o:`.syhhhhhhh/.oo++o`      CPU: Intel Core i5-9300H @ 8x 2.4GHz [52.0°C]
               /osyyyyyyo++ooo+++/     GPU: GeForce GTX 1050
                   ````` +oo+++o\:     RAM: 4700MiB / 15891MiB
                          `oo++.     
#+end_src

# + GitHub: 
# + Official Website: 
# + Install tutorial: 
# + Ref:

* System
** boot-repair
#+BEGIN_SRC shell
sudo add-apt-repository ppa:yannubuntu/boot-repair &&\
sudo apt-get update &&\
sudo apt-get install -y boot-repair && boot-repair
#+END_SRC
+ Ref: https://help.ubuntu.com/community/Boot-Repair

<2021-03-19 Fri>

** Dotfiles
#+BEGIN_SRC shell
mkdir ~/.dotfiles &&\
git clone https://github.com/shdennlin/dotfiles.git ~/.dotfiles/. &&\
cd ~/.dotfiles &&\
bash install.sh &&\
#+END_SRC
+ GitHub: https://github.com/shdennlin/dotfiles

<2021-03-19 Fri>
  
** extra-cmake-modules
#+BEGIN_SRC shell
cd ~/Downloads &&\
git clone https://github.com/KDE/extra-cmake-modules.git &&\
cd extra-cmake-modules &&\
mkdir build &&\
cd build &&\
cmake ..  &&\
make &&\
sudo make install
#+END_SRC
+ GitHub: [[https://github.com/KDE/extra-cmake-modules][KDE/extra-cmake-modules]] 

** fcitx & boshiamy
#+BEGIN_SRC shell
sudo apt-get install -y fcitx fcitx-table-boshiamy fcitx-chewing
#+END_SRC
+ Ref: [[https://thorasgard520.blogspot.com/2019/04/linux-ubuntu-fcitx.html][Linux Ubuntu 嘸蝦米輸入法的FCITX安裝]] 

<2021-03-19 Fri>  

** font
#+BEGIN_SRC shell
cd ~/Downloads &&\
git clone https://github.com/shdennlin/linux-configuration.git &&\
cd ~/Downloads/linux-configuration/fonts &&\
bash install.sh
#+END_SRC
+ GitHub: [[https://github.com/shdennlin/linux-configuration][shdennlin/linux-configuration]] 

** GNOME

Install gnome extensions and web plugins
#+BEGIN_SRC shell
sudo apt install -y gnome-tweaks gnome-shell-extensions &&\
sudo apt install -y chrome-gnome-shell
gnome-shell --version
#+END_SRC

+ Ref: [[https://www.itread01.com/content/1544311459.html][針對Gnome 3的Linux桌面進行美化]] 
<2021-03-19 Fri>

*** My extensions
1. [[https://extensions.gnome.org/extension/16/auto-move-windows/][Auto Move Windows]]
2. [[https://extensions.gnome.org/extension/517/caffeine/][Caffeine]]
3. [[https://extensions.gnome.org/extension/307/dash-to-dock/][Dash to Dock]]
4. [[https://extensions.gnome.org/extension/1465/desktop-icons/][Desktop Icons]]
5. [[https://extensions.gnome.org/extension/545/hide-top-bar/][Hide Top Bar]]
6. [[https://extensions.gnome.org/extension/750/openweather/][OpenWeather]]
7. [[https://extensions.gnome.org/extension/800/remove-dropdown-arrows/][Remove Dropdown Arrows]]
8. [[https://extensions.gnome.org/extension/120/system-monitor/][system-monitor]]

** TODO NFS
#+begin_src shell
sudo apt install -y nfs-kernel-server nfs-common
#+end_src
show status
#+begin_src shell
systemctl status rpcbind.service
systemctl status 
#+end_src

<2021-03-18 Thu>

** systemback
#+begin_src shell
sudo apt install systemback
#+end_src

+ Install tutorial: https://ubuntuqa.com/zh-tw/article/10012.html
+ Install tutorial: https://www.linuxbabe.com/ubuntu/install-systemback-ubuntu-18-04-bionic-18-10

<2021-03-18 Thu>

** update & upgrade  
#+BEGIN_SRC shell
sudo apt-get update && sudo apt-get -y upgrade
#+END_SRC
or
#+BEGIN_SRC shell
sudo apt-get update && sudo apt-get -y dist-upgrade
#+END_SRC

+ Ref: [[https://blog.longwin.com.tw/2008/03/debian_ubuntu_apt_dist_upgrade_difference_2008/][APT upgrade 和 dist-upgrade 的差別]] 
    
** 中文 Language pack
#+begin_src shell
echo $LANG

sudo apt-get install -y language-pack-zh-han* &&\
sudo apt install $(check-language-support)

sudo apt-get install language-pack-gnome-zh-han*
#+end_src
+ Ref: [[https://www.twblogs.net/a/5c38452dbd9eee35b21d8750][Ubuntu 18.04 LTS 命令行方式安裝中文語言包]]

<2021-03-19 Fri>

** System Problem
*** OS Information
=cat /etc/os-release=
#+begin_src shell
NAME="Ubuntu"
VERSION="20.04.2 LTS (Focal Fossa)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 20.04.2 LTS"
VERSION_ID="20.04"
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
VERSION_CODENAME=focal
UBUNTU_CODENAME=focal
#+end_src
=lshw -class display=
#+begin_src shell
*-display                 
      description: VGA compatible controller
      product: GP107M [GeForce GTX 1050 3 GB Max-Q]
      vendor: NVIDIA Corporation
      physical id: 0
      bus info: pci@0000:01:00.0
      version: a1
      width: 64 bits
      clock: 33MHz
      configuration: driver=nvidia latency=0
      resources: irq:138 memory:a3000000-a3ffffff memory:90000000-9fffffff memory:a0000000-a1ffffff ioport:4000(size=128) memory:a4080000-a40fffff

*-display
      description: VGA compatible controller
      product: UHD Graphics 630 (Mobile)
      vendor: Intel Corporation
      physical id: 2
      bus info: pci@0000:00:02.0
      version: 00
      width: 64 bits
      clock: 33MHz
      capabilities: pciexpress msi pm vga_controller bus_master cap_list rom
      configuration: driver=i915 latency=0
      resources: irq:137 memory:a2000000-a2ffffff memory:b0000000-bfffffff ioport:5000(size=64) memory:c0000-dffff
#+end_src
=nvidia-smi=
#+begin_src shell
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 460.67       Driver Version: 460.67       CUDA Version: 11.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  GeForce GTX 1050    Off  | 00000000:01:00.0  On |                  N/A |
| N/A   43C    P0    N/A /  N/A |    335MiB /  3020MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|    0   N/A  N/A      1752      G   /usr/lib/xorg/Xorg                 57MiB |
|    0   N/A  N/A      2432      G   /usr/lib/xorg/Xorg                196MiB |
|    0   N/A  N/A      2629      G   /usr/bin/gnome-shell               70MiB |
+-----------------------------------------------------------------------------+
#+end_src

<2021-03-20 Sat>

*** Doesn't auto enable Bluetooth when system startup.
18.04* users who don't naturally have a /etc/rc.local, you'll need to create one and make it executable. To make things slightly easier, you can just paste the following command into a terminal:
#+begin_src shell
sudo install -b -m 755 /dev/stdin /etc/rc.local << EOF
#!/bin/sh
rfkill unblock bluetooth
exit 0
EOF
#+end_src

+ Ref Website: https://askubuntu.com/a/2568/1193335

<2021-03-18 Thu>

*** System doesn't resume after suspend
[ =V= ] means it's work for me
[ =X= ] means it's not work for me
<2021-03-20 Sat>

**** [ =X= ] Suspend and hibernate configuration in Debian Jessie
1. edit =/etc/systemd/logind.conf=
2. create the file =/etc/systemd/system/suspend-sedation.service=

Ref: https://wiki.debian.org/Hibernation
Ref: https://wiki.debian.org/SystemdSuspendSedation

**** [ =X= ] Hibernate with hibernate command
#+begin_src shell
sudo apt-get install hibernate
sudo hibernate
#+end_src

**** [ =X= ] edit =/etc/systemd/logind.conf= 
Ref: https://askubuntu.com/a/1245763/1193335

**** [ =X= ] edit =/etc/default/grub= file
#+begin_src shell
GRUB_CMDLINE_LINUX="nouveau.modeset=0"
#+end_src

after that run:
#+begin_src shell
sudo update-grub
sudo reboot
#+end_src

Ref: https://askubuntu.com/a/1041395/1193335

**** [ =X= ] sudo apt-get install pm-utils
I got a workaround for suspend working on Ubuntu 18.04 with a NVIDIA
GeForce GTX 1050 Mobile and proprietary nvidia drivers 390. I installed
pm-suspend via =sudo apt-get install pm-utils=. Then, I switch from
Gnome Shell to the terminal via Ctrl+Alt+f6. After the login, I do
=sudo pm-suspend=. After waking up from standby, I change back to Gnome
Shell via Ctrl+Alt+f1. Done!

Ref: https://askubuntu.com/a/1081639/1193335

**** [ =V= ] add-apt-repository ppa:graphics-drivers/ppa 
#+begin_src shell
sudo add-apt-repository ppa:graphics-drivers/ppa
sudo apt update
sudo apt upgrade
sudo reboot
#+end_src

Ref: https://bugs.launchpad.net/ubuntu/+source/nvidia-graphics-drivers-460/+bug/1911055 #9

**** [ =not test= ] edit =/etc/gdm3/custom.conf=
If your desktop does not load after installing the corresponding driver, then do the following:
=sudo nano /etc/gdm3/custom.conf=
then remove the comment (# symbol) from the line that says 
=# WaylandEnable=false=
and save. Then reboot. If this still does not work, then please disable Secure Boot since you might actually be using UEFI. 

Ref: https://askubuntu.com/a/61433/1193335 1. The quick way

*** Change the login screen resolution in Ubuntu 20.04

**** [ =X= ] edit =/etc/default/grub= file
Step:
1. Open a terminal and enter:
   #+begin_src shell
   sudo vi /etc/default/grub
   #+end_src
2. Find the =#GRUB_GFXMODE=640x480=, Below that line, enter the following, substituting the 1920x1080 for a supported resolution:
   #+begin_src shell
   GRUB_GFXMODE=1920x1080
   GRUB_GFXPAYLOAD_LINUX=keep
   #+end_src

Ref: https://askubuntu.com/a/1041697/1193335

**** [ =V= ] edit =/etc/default/grub= file
Just want to add that I found a way to change the login screen resolution. That part of my problem has been asked and answered, see [[https://askubuntu.com/questions/912052/how-do-i-change-gdm3-login-screen-resolution][how to change gdm3 thread]].

After setting up the monitor resolution and zoom level I wanted, I simply copy the settings to gdm3 .config directory, make any further changes you need and then reboot the PC.
#+begin_src shell
sudo cp -i ~/.config/monitors.xml /var/lib/gdm3/.config/
less /var/lib/gdm3/.config/monitors.xml
#+end_src
You probably also need to do the following before rebooting. Select gdm3 when prompted.
#+begin_src shell
sudo dpkg-reconfigure gdm3
#+end_src

Ref: https://askubuntu.com/a/1041697/1193335

*** TODO Changing login background automatically
Ref: https://askubuntu.com/questions/1227070/how-do-i-change-login-screen-theme-or-background-in-ubuntu-20-04

*** Login Screen language doesn't Chinese
Ref: [[https://www.arthurtoday.com/2015/02/how-to-make-ubuntu-terminal-speak-your-language.html][Ubuntu 用指令設定終端機顯示中文訊息]]

* Editor & IDE
** Emacs
An extensible, customizable, free/libre text editor — and more.
#+begin_src shell
sudo snap install emacs --classic
#+end_src

+ Official Website: https://www.gnu.org/software/emacs/
+ Snapcraft: https://snapcraft.io/emacs
+ GitHub: https://github.com/emacs-mirror/emacs

<2021-03-19 Fri>

*** Emacs GUI can't activation Fcitx input method
#+begin_center shell
echo "export LC_CTYPE=zh_TW.UTF-8" >> ~/.xprofile
#+end_center
+ Ref: [[https://blog.rex-tsou.com/2017/12/arch-linux%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A%E8%88%87%E5%B8%B8%E7%94%A8%E5%A5%97%E4%BB%B6/][Arch Linux：環境設定與常用套件]]

<2021-03-21 Sun>

** Intellij IDEA
IntelliJ IDEA is an integrated development environment (IDE) written in Java for developing computer software. It is developed by JetBrains (formerly known as IntelliJ), and is available as an Apache 2 Licensed community edition, and in a proprietary commercial edition. Both can be used for commercial development.
#+begin_src sh
sudo snap install intellij-idea-community --classic
#+end_src

+ Official Website: https://www.jetbrains.com/idea/

<2021-03-25 Thu>

** Spacemacs
Spacemacs is a new way to experience Emacs -- a sophisticated and polished set-up focused on ergonomics, mnemonics and consistency.

Just clone it, launch it, then press the space bar to explore the interactive list of carefully-chosen key bindings. You can also press the home buffer's [?] button for some great first key bindings to try.

Spacemacs can be used naturally by both Emacs and Vim users -- you can even mix the two editing styles. Switching easily between input styles makes Spacemacs a great tool for pair-programming.

Spacemacs is currently in beta, and contributions are very welcome.
#+BEGIN_SRC shell
git clone https://github.com/syl20bnr/spacemacs.git ~/.emacs.d &&\
git clone https://github.com/shdennlin/spacemacs-private.git ~/.spacemacs.d
#+END_SRC
+ GitHub1: [[https://github.com/syl20bnr/spacemacs][syl20bnr/spacemacs]] 
+ GitHub2: [[https://github.com/shdennlin/spacemacs-private][shdennlin/spacemacs-private]] 
+ Ref: [[https://www.spacemacs.org/][spacemacs.org]]  

<2021-03-19 Fri>

** typora
Typora gives you a seamless experience as both a reader and a writer. It removes the preview window, mode switcher, syntax symbols of markdown source code, and all other unnecessary distractions. Instead, it provides a real live preview feature to help you concentrate on the content itself.

#+begin_src shell
# or run:
# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE

wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -

# add Typora's repository

sudo add-apt-repository 'deb https://typora.io/linux ./'

sudo apt-get update

# install typora

sudo apt-get install typora
#+end_src

+ Official Website: https://typora.io/

<2021-03-24 Wed>

** Vim
#+BEGIN_SRC shell
sudo apt purge vim
sudo apt-get install vim-gtk3
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
#+END_SRC
+ Ref: [[https://github.com/shdennlin/dotfiles][shdennlin/dotfiles]] 

* Software Engineering
** Anaconda
#+BEGIN_SRC shell
cd ~/Downloads
wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh
bash ~/Dwonloads/Anaconda3-2020.02-Linux-x86_64.sh
conda create -n tf-gpu tensorflow-gpu
conda activate tf-gpu
#+END_SRC
** Java
#+BEGIN_SRC shell
# install open JRE
sudo apt install openjdk-8-jre
# change default version in Ubuntu
sudo update-alternatives --config java
# check java version
java -version
# set JAVA_HOME environment variable
echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/" >> ~/.bashrc
echo "export PATH=\$PATH:\$JAVA_HOME/bin" >> ~/.bashrc
echo $PATH | grep java
#+END_SRC
+ Official Website: https://www.oracle.com/java/
+ Install tutorial: https://www.oracle.com/java/technologies/javase-downloads.html
+ Open JRE: https://ubuntu.com/tutorials/install-jre

<2021-03-26 Fri>

** JavaScirpt-Node Package Manager(NPM)
npm (originally short for Node Package Manager)[4] is a package manager for the JavaScript programming language. 
#+begin_src shell
sudo apt install -y npm
sudo npm i -g npm

sudo npm install -g chokidar
sudo npm install -g urix
sudo npm install -g resolve-url

sudo npm install -g vmd

sudo npm audit fix
#+end_src

<2021-03-25 Thu>

** KiCad
A Cross Platform and Open Source Electronics Design Automation Suite
#+BEGIN_SRC shell
sudo add-apt-repository --yes ppa:js-reynaud/kicad-4 ; &&\
sudo apt-get update ; &&\
sudo apt-get install -y kicad
#+END_SRC

+ Official Website: https://kicad.org/
+ Install tutorial: https://kicad.org/download/ubuntu/

<2021-03-25 Thu>

** Latex
#+BEGIN_SRC shell
sudo apt-get install texlive-base &&\
sudo apt-get install texlive-latex-recommended &&\
sudo apt-get install texlive &&\
sudo apt-get install texlive-latex-extra &&\
sudo apt-get install texlive-xetex
#+END_SRC
+ Ref: [[https://linuxconfig.org/how-to-install-latex-on-ubuntu-20-04-focal-fossa-linux][How to install LaTex on Ubuntu 20.04 Focal Fossa Linux]] 

** MySQL
#+BEGIN_SRC shell
sudo apt-get install mysql-server
sudo apt install mysql-client
sudo apt install libmysqlclient-dev
#+END_SRC

check insall
#+begin_src shell
sudo netstat -tap | grep mysql
#+end_src

+ Ref: [[https://snapcraft.io/musixmatch][Install Musixmatch on your Linux distribution]]

<2021-03-25 Thu>

** Nginx
Nginx (pronounced "engine X"), stylized as NGINX, nginx or NginX, is a web server that can also be used as a reverse proxy, load balancer, mail proxy and HTTP cache. The software was created by Igor Sysoev and publicly released in 2004. Nginx is free and open-source software, released under the terms of the 2-clause BSD license. A large fraction of web servers use NGINX, often as a load balancer. 
#+begin_src sh
sudo apt-get install -y nginx
sudo nginx -v
sudo nginx
curl -I 127.0.0.1
#+end_src

+ GitHub: https://github.com/nginx/nginx
+ Repository: https://hg.nginx.org/nginx
+ Official Website: https://www.nginx.com/
+ Install tutorial: https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/

<2021-03-26 Fri>

** Ruby-RVM
Ruby Version Manager (RVM)

RVM is a command-line tool which allows you to easily install, manage, and work with multiple ruby environments from interpreters to sets of gems. 

Install Step:
1. To see =Install tutorial=
2. after Install, type
    #+begin_src sh
    echo "[[ -s \"$HOME/.rvm/scripts/rvm\" ]] && . \"$HOME/.rvm/scripts/rvm\"" >> ~/.profile
    #+end_src
3. reboot system


+ Official Website: https://rvm.io/
+ Install tutorial: https://rvm.io/rvm/install

** Tensorflow-gpu
#+BEGIN_SRC shell
cd ~/Downloads
wget http://tw.download.nvidia.com/XFree86/Linux-x86_64/440.82/NVIDIA-Linux-x86_64-440.82.run
#+END_SRC
+ Ref: [[https://illya13.github.io/RL/tutorial/2020/04/26/installing-tensorflow-on-ubuntu-20.html][Installing TensorFlow 2 with GPU support on Ubuntu 20.04 LTS]] 

** Redis
Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps.
#+begin_src sh
sudo add-apt-repository ppa:redislabs/redis &&\
sudo apt-get update &&\
sudo apt-get install -y redis
#+end_src
+ GitHub: https://github.com/redis/redis
+ Official Website: https://redis.io/
+ Install tutorial: https://redis.io/download

<2021-03-26 Fri> 

* Engineering Tool
** Angry IP scanner
Angry IP Scanner - fast and friendly network scanner 
*Go to Download Page to Download =deb= file* and type below:
#+begin_src shell
cd ~/Downloads
sudo apt install ipscan_3.7.6_all.deb # your version
#+end_src

+ Official Website: https://angryip.org/about/
+ Download Page: https://angryip.org/download/#linux
+ GitHub: [[https://github.com/angryip/ipscan/tree/3.7.2]]

<2021-03-19 Fri>

** flatpak
#+BEGIN_SRC shell
sudo apt install -y flatpak
#+END_SRC
+ Ref: [[https://zh.wikipedia.org/wiki/Flatpak][flatpak]](wiki)

** Git
Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. 
#+BEGIN_SRC shell
sudo add-apt-repository ppa:git-core/ppa
sudo apt update
sudo apt-get -y install git
#+END_SRC
+ Official Website: https://git-scm.com/

<2021-03-20 Sat>

** GitKraken
#+BEGIN_SRC shell
wget https://release.gitkraken.com/linux/gitkraken-amd64.deb ~/Downloads &&\
sudo dpkg -i ~/Downloads/gitkraken-amd64.deb
#+END_SRC
+ Ref: [[https://www.gitkraken.com/][GitKrakon]] 

** HUGO
A Fast and Flexible Static Site Generator built with love by bep, spf13 and friends in Go.
#+BEGIN_SRC shell
# sudo snap install hugo  # version 0.80.0, or
# sudo apt  install hugo  # version 0.68.3-1
sudo snap install hugo
#+END_SRC
+ Official Website: https://gohugo.io/
+ Install tutorial: [[https://gohugo.io/getting-started/installing]]
+ GitHub: [[https://github.com/gohugoio/hugo]]

<2021-03-16 Tue>

** Elastic Search
Elasticsearch is a search engine based on the Lucene library. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in Java and is dual-licensed under the source-available Server Side Public License and the Elastic license, while other parts fall under the proprietary (source-available) Elastic License. Official clients are available in Java, .NET (C#), PHP, Python, Apache Groovy, Ruby and many other languages. According to the DB-Engines ranking, Elasticsearch is the most popular enterprise search engine followed by Apache Solr, also based on Lucene. 
#+begin_src sh
# APT or YUM (RECOMMEND)(to see Install with Repositories)
wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
echo "deb https://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
sudo apt-get update && sudo apt-get install elasticsearch
whereis elasticsearch
sudo update-rc.d elasticsearch defaults 95 10
sudo /bin/systemctl daemon-reload
sudo /bin/systemctl enable elasticsearch.service

# install manually
cd ~/Downloads
curl -L -O https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.4.6/elasticsearch-2.4.6.tar.gz
tar -xvf elasticsearch-2.4.6.tar.gz
cd elasticsearch-2.4.6/bin
./elasticsearch
./elasticsearch --cluster.name my_cluster_name --node.name my_node_name
#+end_src

+ Official Website: https://www.elastic.co/
+ Install tutorial: https://www.elastic.co/guide/en/elasticsearch/reference/index.html
+ Install with Repositories: https://www.elastic.co/guide/en/elasticsearch/reference/index.html

<2021-03-26 Fri>

** Memcached
Memcached is a high performance multithreaded event-based key/value cache store intended to be used in a distributed system.
#+begin_src sh
sudo apt-get install libevent-dev
sudo apt-get install memcached
#+end_src

+ GitHub: https://github.com/memcached/memcached
+ Official Website: https://memcached.org/
+ Install tutorial: https://github.com/memcached/memcached/wiki/Install

<2021-03-26 Fri>

* Terminal Tool
** ag
A code searching tool similar to ack, with a focus on speed.
#+BEGIN_SRC shell
sudo apt-get install -y silversearcher-ag
#+END_SRC
+ GitHub: https://github.com/ggreer/the_silver_searcher
 
<2021-03-16 Tue>
  
** gdrive
#+BEGIN_SRC shell
cd ~/Downloads &&\
wget -O drive https://drive.google.com/uc?id=0B3X9GlR6Embnb095MGxEYmJhY2c &&\
sudo install drive /usr/local/bin/drive
#+END_SRC
+ GitHub: [[https://github.com/prasmussen/gdrive][prasmussen/gdrive]]  
+ Ref: [[https://hiraku.tw/2020/01/5894/][如何在終端機介面使用 Google Drive (gdrive cmd)]] 

** Linux Advanced Power Management (TLP)
TLP is a feature-rich command line utility for Linux, saving laptop battery power without the need to delve deeper into technical details.

TLP’s default settings are already optimized for battery life and implement Powertop’s recommendations out of the box. So you may just install and forget it.

Nevertheless TLP is highly customizable to fulfil your specific requirements.

#+BEGIN_SRC shell
sudo add-apt-repository ppa:linrunner/tlp &&\
sudo apt update &&\
sudo apt install tlp tlp-rdw &&\
sudo apt-get install smartmontools &&\
sudo systemctl start tlp &&\
sudo tlp-stat | less
#+END_SRC
+ Ref: [[https://github.com/twtrubiks/linux-note/tree/master/linux-tlp-tutorial][linux tlp tutorial]]
+ Ref: [[https://linrunner.de/tlp/][TLP - Optimize Linux Laptop Battery Life]] 

** lm Sensors
#+begin_src shell
sudo apt install -y lm-sensors

sudo sensors-detect

sensors
#+end_src

+ Ref: [[https://linoxide.com/install-lm-sensors-linux/][How to Install lm Sensors on Linux]]

<2021-03-18 Thu>

** locate
#+begin_src shell
sudo apt install -y mlocate
#+end_src

+ Ref: [[http://blog.faq-book.com/?p=1013][搜尋指令 which, whereis, locate, find的差別]]

<2021-03-19 Fri>

** rar, zip
#+BEGIN_SRC shell
apt-get install -y unrar &&\
sudo apt install -y p7zip-full
#+END_SRC

** screenfetch
screenFetch is a "Bash Screenshot Information Tool". This handy Bash script can be used to generate one of those nifty terminal theme information + ASCII distribution logos you see in everyone's screenshots nowadays. It will auto-detect your distribution and display an ASCII version of that distribution's logo and some valuable information to the right. There are options to specify no ASCII art, colors, taking a screenshot upon displaying info, and even customizing the screenshot command! This script is very easy to add to and can easily be extended.
#+BEGIN_SRC shell
sudo apt install screenfetch
#+END_SRC
+ GitHub: https://github.com/KittyKatt/screenFetch

<2021-03-25 Thu>

** Terminator
Originally created and developed for a long time by Chris Jones, the goal of this project is to produce a useful tool for arranging terminals. It is inspired by programs such as gnome-multi-term, quadkonsole, etc. in that the main focus is arranging terminals in grids (tabs is the most common default method, which Terminator also supports).

Much of the behaviour of Terminator is based on GNOME Terminal, and we are adding more features from that as time goes by, but we also want to extend out in different directions with useful features for sysadmins and other users. If you have any suggestions, please file wishlist bugs! (see below for the address)
#+BEGIN_SRC shell
sudo apt install -y terminator
#+END_SRC

+ Official Website: https://gnometerminator.blogspot.com/
+ Install tutorial: https://gnometerminator.blogspot.com/p/introduction.html
+ My configuration: https://github.com/shdennlin/dotfiles

<2021-03-16 Tue>

** top-bpytop
Resource monitor that shows usage and stats for processor, memory, disks, network and processes. Python port of bashtop.
#+BEGIN_SRC shell
cd ~/Downloads &&\
git clone https://github.com/aristocratos/bpytop.git &&\
cd bpytop &&\
sudo make install
#+END_SRC
+ GitHub: https://github.com/aristocratos/bpytop

<2021-03-19 Fri>

** top-NVTOP
Nvtop stands for NVidia TOP, a (h)top like task monitor for NVIDIA GPUs. It can handle multiple GPUs and print information about them in a htop familiar way.
#+BEGIN_SRC shell
sudo apt install cmake libncurses5-dev libncursesw5-dev
sudo apt install -y nvtop
#+END_SRC
+ GitHub: https://github.com/Syllo/nvtop

<2021-03-18 Thu>

** xclip
xclip is a command line interface to the X11 clipboard. It allows you to put the output of a command directly into the clipboard so that you don't have to copy&paste from the terminal manually (which can be a tedious task especially if the output is very long). It also allows you to put the contents of a file directly into the clipboard. 
#+BEGIN_SRC shell
sudo apt-get install -y xclip
#+END_SRC
+ Ref: [[https://www.howtoforge.com/command-line-copy-and-paste-with-xclip-debian-ubuntu][Command-Line Copy&Paste With xclip (Debian/Ubuntu)]]

** ImageMagick
ImageMagick is a free and open-source cross-platform software suite for displaying, creating, converting, modifying, and editing raster images. Created in 1987 by John Cristy, it can read and write over 200 image file formats. It and its components are widely used in open-source applications. 
#+begin_src sh
cd ~/Downloads &&\
git clone --depth 1 https://github.com/ImageMagick/ImageMagick.git ImageMagick-7.0.11 &&\
cd ImageMagick-7.0.11 &&\
./configure &&\
make

./configure --with-modules
sudo make install
sudo ldconfig /usr/local/lib
/usr/local/bin/convert logo: logo.gif
magick identify -version
#+end_src

+ GitHub: https://github.com/ImageMagick/ImageMagick
+ Official Website: https://imagemagick.org/index.php
+ Install tutorial: https://imagemagick.org/script/install-source.php

<2021-03-26 Fri>  

* Life Tool
** BingWall - Bing wallpaper of the day
Bing wallpaper of the day application for Gnome desktop.
#+BEGIN_SRC shell
sudo snap install bing-wall
#+END_SRC
+ Snapcraft: https://snapcraft.io/bing-wall
+ GitHub: https://github.com/keshavbhatt/BingWall

<2021-03-16 Tue>

** Crow Translate
A small translate tool like QTranslate.
#+BEGIN_SRC shell
sudo add-apt-repository ppa:jonmagon/crow-translate &&\
sudo apt update &&\
sudo apt install crow-translate
#+END_SRC
+ Official Website: https://crow-translate.github.io/
+ GitHub: https://github.com/crow-translate/crow-translate
  
<2021-03-19 Fri>

** draw.io
#+BEGIN_SRC shell
sudo snap install drawio
#+END_SRC
+ GitHub: https://github.com/jgraph/drawio-desktop
+ Snapcraft: https://snapcraft.io/drawio

<2021-03-23 Tue>

** FreeCAD
#+BEGIN_SRC shell
sudo apt install -y freecad
#+END_SRC

** FSearch
FSearch is a fast file search utility, inspired by Everything Search Engine. It's written in C and based on GTK+3.
#+BEGIN_SRC shell
sudo add-apt-repository ppa:christian-boxdoerfer/fsearch-daily &&\
sudo apt-get update &&\
sudo apt install fsearch-trunk
#+END_SRC

+ GitHub: [[https://github.com/cboxdoerfer/fsearch][cboxdoerfer/fsearch]] 
  
** linux-wifi-hotspot
Feature-rich wifi hotspot creator for Linux which provides both GUI and command-line interface. It is also able to create a hotspot using the same wifi card which is connected to an AP already ( Similar to Windows 10).
#+BEGIN_SRC shell
sudo add-apt-repository ppa:lakinduakash/lwh
sudo apt install linux-wifi-hotspot
#+END_SRC
+ GitHub: https://github.com/lakinduakash/linux-wifi-hotspot

<2021-03-19 Fri>

** Logitech MX Master
First:
#+BEGIN_SRC shell
sudo apt install -y cmake libevdev-dev libudev-dev libconfig++-dev &&\
mkdir -p ~/Downloads/logiops &&\
git clone https://github.com/PixlOne/logiops.git ~/Downloads/logiops/  &&\
cd ~/Downloads/logiops &&\
mkdir build &&\
cd build &&\
cmake .. &&\
make &&\
sudo make install &&\
sudo systemctl start logid
#+END_SRC
Second:
#+BEGIN_SRC shell
mkdir -p ~/Downloads/logitech-mouse-config &&\
git clone https://github.com/shdennlin/logitech-mouse-config.git ~/Downloads/logitech-mouse-config/ &&\
cd ~/Downloads/logitech-mouse-config/ &&\
bash install.sh
#+END_SRC
+ GitHub: [[https://github.com/shdennlin/logitech-mouse-config][shdennlin/logitech-mouse-config]]  
+ Ref: See GitHub

** MusixMatch
#+BEGIN_SRC shell
sudo snap install musixmatch
#+END_SRC
+ GitHub:   
+ Ref: [[https://snapcraft.io/musixmatch][Install Musixmatch on your Linux distribution]] 

** nomacs
nomacs is a free, open source image viewer, which supports multiple platforms. You can use it for viewing all common image formats including RAW and psd images.
#+BEGIN_SRC shell
sudo apt install nomacs &&\
sudo apt-get install nomacs-l10n
#+END_SRC
+ Ref: [[https://nomacs.org/\\][nomacs.org]] 

** Okular
Okular is a universal document viewer developed by KDE. Okular works on multiple platforms, including but not limited to Linux, Windows, macOS, *BSD, etc.
#+BEGIN_SRC shell
sudo apt-get install okular
#+END_SRC
+ Ref: [[https://okular.kde.org/][okular.kde.org]] 

** Open Broadcaster Software Studio (OBS)
Free and open source software for video recording and live streaming.
#+BEGIN_SRC shell
sudo add-apt-repository ppa:obsproject/obs-studio ;\
sudo apt update ;\
sudo apt install -y obs-studio
#+END_SRC
+ Ref1: [[https://obsproject.com/][obsproject.com]] 
+ Ref2: [[https://itsfoss.com/best-linux-screen-recorders/][9 Best Screen Recorders For Linux]]

** Spotify
#+BEGIN_SRC shell
sudo snap install spotify
#+END_SRC

+ Official Website: https://www.spotify.com/
+ Snapcraft: https://snapcraft.io/spotify

<2021-03-19 Fri> 
  
* Communication
** Discord
#+BEGIN_SRC shell
sudo snap install discord
#+END_SRC
+ Official Website: https://discord.com/
+ Snapcraft: https://snapcraft.io/discord

<2021-03-19 Fri>  

** LINE
+ Ref: [[https://tedliou.com/archives/howto-install-line-on-ubuntu-20-04/][如何在 Ubuntu 20.04 中安裝 LINE 通訊軟體]]

<2021-03-16 Tue>

